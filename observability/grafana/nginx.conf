events { }

http {

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
  }

  server {
    if ($host = telemetry.hackclub.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name telemetry.hackclub.com;
    return 301 https://telemetry.hackclub.com$request_uri;
  

}

   server {
    listen 443 ssl;
    server_name telemetry.hackclub.com;
    ssl_certificate /etc/letsencrypt/live/telemetry.hackclub.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/telemetry.hackclub.com/privkey.pem; # managed by Certbot
    
    access_log /var/log/nginx/data-access.log combined;

    location / {
       proxy_pass http://grafana:3000/;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_redirect http://grafana:3000/ $scheme://$http_host/;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
       proxy_read_timeout 20d;
       proxy_buffering off;
    }

    location /api/live/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $http_host;
      proxy_pass http://grafana:3000;
    }

    location /mtx {
       proxy_pass http://httpmetrics:8100/mtx;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_redirect http://httpmetrics:8100/mtx $scheme://$http_host/mtx;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
       proxy_read_timeout 20d;
       proxy_buffering off;
    }
   
}
}
